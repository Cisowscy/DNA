@mixin Flex-Instancja($W, $H, $AxisType){
  width: $W;
  height: $H;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  flex-flow: $AxisType; //* (row | row-reverse | column | column-reverse)  (nowrap | wrap | wrap-reverse)*/
}
@mixin Flex-Uklad($AlignItemInMainAxis, $AlignItemInCrossAxis, $SpaceInCrossAxis){
  justify-content: $AlignItemInMainAxis; //* flex-start | flex-end | center | space-between | space-around | space-evenly */
  align-items: $AlignItemInCrossAxis; //* flex-start | flex-end | center | baseline | stretch  */
  align-content: $SpaceInCrossAxis; //* flex-start | flex-end | center | space-between | space-around | stretch  */
}
@mixin Flex-Przewijak($Xscroll, $Yscroll){
  overflow-y: $Yscroll; //* visible | hidden | scroll  | auto | initial | inherit */
  overflow-x: $Xscroll;
  -webkit-overflow-scrolling: touch; //* touch | auto */
}
@mixin Flex-Element($grow, $padding){
  /* flex - to jest skrót od: (Drugi i trzeci parametr ( flex-shrinki flex-basis) są opcjonalne. Domyślna wartość to 0 1 auto.)
  -> flex-grow : <number>;  default 0
  -> flex-shrinki  : flex-shrink: <number>;  default 1
  -> flex-basis : flex-basis: <length> | auto;  default auto  */
  flex: $grow; //* 1 same as flex: 1 1 auto; */
  padding: $padding;
}
@mixin Flex-Pozycja($position, $AlignSelf){
  order: $position; //* <integer>; default is 0 */
  align-self: $AlignSelf; //* auto | flex-start | flex-end | center | baseline | stretch; */
}
@mixin ObrazekTla($cover, $obrazek, $left){
  -webkit-background-size: $cover;
  -moz-background-size: $cover;
  -o-background-size: $cover;
  background-size: $cover;
  background-image: url($obrazek);
  background-repeat: no-repeat;
  background-position: top left $left;
  background-attachment: fixed;
}





































// @mixin flexbox100h200w() {
//   .flexbox-grand-parent {
//    // background: rgba(212, 212, 212, 0.7);
//     width: 200%; //100vw
//     height: 100%; //100vh
//     display: flex;
//     flex-direction: row;
//     justify-content: flex-start;
//     /* align items in Main Axis */
//     align-items: stretch;
//     /* align items in Cross Axis */
//     align-content: stretch;
//     /* Extra space in Cross Axis */
//   }
// }
//
// @mixin flexbox100h100w() {
//   .flexbox-parent {
//    // background: rgba(212, 212, 212, 0.7);
//     width: 100%; //100vw
//     height: 100%; //100vh
//     display: flex;
//     flex-direction: column;
//     justify-content: flex-start;
//     /* align items in Main Axis */
//     align-items: stretch;
//     /* align items in Cross Axis */
//     align-content: stretch;
//     /* Extra space in Cross Axis */
//   }
//   .flexbox-item {
//     padding: 0.1rem;
//   }
//   .flexbox-item-grow {
//     flex: 1;
//     /* same as flex: 1 1 auto; */
//   }
//   .flexbox-item.header {
//    // background: rgba(28, 122, 199, 0.726);
//   }
//   .flexbox-item.content {
//    // background: rgba(27, 155, 54, 0.74);
//   }
//   .flexbox-item.footer {
//    // background: rgba(126, 67, 12, 0.781);
//   }
//   .fill-area {
//     display: flex;
//     flex-direction: row;
//     justify-content: flex-start;
//     /* align items in Main Axis */
//     align-items: stretch;
//     /* align items in Cross Axis */
//     align-content: stretch;
//     /* Extra space in Cross Axis */
//   }
//   .fill-area-content {
//    // background: rgba(0, 0, 0, 0.26); //
//    //border: 1px solid #ffffff;
//     /* Needed for when the area gets squished too far and there is content that can't be displayed */
//     overflow: auto;
//   }
// }
